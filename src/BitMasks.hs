{-# LANGUAGE TemplateHaskell #-}
{-# LANGUAGE BinaryLiterals #-}
module BitMasks where
import Data.Word(Word64)
import Data.Bits(unsafeShiftL, unsafeShiftR, (.|.), FiniteBits (countTrailingZeros))
import Language.Haskell.TH
    ( mkName, Exp, Clause(Clause), Q, Dec(FunD), Body(NormalB) )
import Model (showBits)
import Data.Traversable (for)
import Templates (colMasksXXXXXXXX, mirrorBitsY, kingTableT, knightTableT
                 , bottomRowMask, mkTable )

-- | Precomputed Masks
genColMasks :: Q [Dec]
genColMasks = for [0..255] mkColMaskExp
  where mkColMaskExp ith = do
            mask <- [| colMasksXXXXXXXX ith |]
            let name = mkName $ "colMask" ++ showBits ith 8
            return $ FunD name [Clause [] (NormalB mask) []]

-- | Masks out the rows in the given Word64
rowMask :: Word64 -> Q Exp
rowMask 0 = [|0|]
rowMask n = do
    let row = countTrailingZeros n
    [|(bottomRowMask `unsafeShiftL` (row*8)) .|. $(rowMask ((n `unsafeShiftR` (row+1)) `unsafeShiftL` (row+1)))|]

bishopTable :: Word64 -> Word64
bishopTable 0 =  0b1000000001000000001000000001000000001000000001000000001000000000
bishopTable 1 =  0b0000000010000000010000000010000000010000000010000000010100000000
bishopTable 2 =  0b0000000000000000100000000100000000100000000100010000101000000000
bishopTable 3 =  0b0000000000000000000000001000000001000001001000100001010000000000
bishopTable 4 =  0b0000000000000000000000000000000110000010010001000010100000000000
bishopTable 5 =  0b0000000000000000000000010000001000000100100010000101000000000000
bishopTable 6 =  0b0000000000000001000000100000010000001000000100001010000000000000
bishopTable 7 =  0b0000000100000010000001000000100000010000001000000100000000000000
bishopTable 8 =  0b0100000000100000000100000000100000000100000000100000000000000010
bishopTable 9 =  0b1000000001000000001000000001000000001000000001010000000000000101
bishopTable 10 = 0b0000000010000000010000000010000000010001000010100000000000001010
bishopTable 11 = 0b0000000000000000100000000100000100100010000101000000000000010100
bishopTable 12 = 0b0000000000000000000000011000001001000100001010000000000000101000
bishopTable 13 = 0b0000000000000001000000100000010010001000010100000000000001010000
bishopTable 14 = 0b0000000100000010000001000000100000010000101000000000000010100000
bishopTable 15 = 0b0000001000000100000010000001000000100000010000000000000001000000
bishopTable 16 = 0b0010000000010000000010000000010000000010000000000000001000000100
bishopTable 17 = 0b0100000000100000000100000000100000000101000000000000010100001000
bishopTable 18 = 0b1000000001000000001000000001000100001010000000000000101000010001
bishopTable 19 = 0b0000000010000000010000010010001000010100000000000001010000100010
bishopTable 20 = 0b0000000000000001100000100100010000101000000000000010100001000100
bishopTable 21 = 0b0000000100000010000001001000100001010000000000000101000010001000
bishopTable 22 = 0b0000001000000100000010000001000010100000000000001010000000010000
bishopTable 23 = 0b0000010000001000000100000010000001000000000000000100000000100000
bishopTable 24 = 0b0001000000001000000001000000001000000000000000100000010000001000
bishopTable 25 = 0b0010000000010000000010000000010100000000000001010000100000010000
bishopTable 26 = 0b0100000000100000000100010000101000000000000010100001000100100000
bishopTable 27 = 0b1000000001000001001000100001010000000000000101000010001001000001
bishopTable 28 = 0b0000000110000010010001000010100000000000001010000100010010000010
bishopTable 29 = 0b0000001000000100100010000101000000000000010100001000100000000100
bishopTable 30 = 0b0000010000001000000100001010000000000000101000000001000000001000
bishopTable 31 = 0b0000100000010000001000000100000000000000010000000010000000010000
bishopTable 32 = $(mirrorBitsY 0b0001000000001000000001000000001000000000000000100000010000001000)
bishopTable 33 = $(mirrorBitsY 0b0010000000010000000010000000010100000000000001010000100000010000)
bishopTable 34 = $(mirrorBitsY 0b0100000000100000000100010000101000000000000010100001000100100000)
bishopTable 35 = $(mirrorBitsY 0b1000000001000001001000100001010000000000000101000010001001000001)
bishopTable 36 = $(mirrorBitsY 0b0000000110000010010001000010100000000000001010000100010010000010)
bishopTable 37 = $(mirrorBitsY 0b0000001000000100100010000101000000000000010100001000100000000100)
bishopTable 38 = $(mirrorBitsY 0b0000010000001000000100001010000000000000101000000001000000001000)
bishopTable 39 = $(mirrorBitsY 0b0000100000010000001000000100000000000000010000000010000000010000)
bishopTable 40 = $(mirrorBitsY 0b0010000000010000000010000000010000000010000000000000001000000100)
bishopTable 41 = $(mirrorBitsY 0b0100000000100000000100000000100000000101000000000000010100001000)
bishopTable 42 = $(mirrorBitsY 0b1000000001000000001000000001000100001010000000000000101000010001)
bishopTable 43 = $(mirrorBitsY 0b0000000010000000010000010010001000010100000000000001010000100010)
bishopTable 44 = $(mirrorBitsY 0b0000000000000001100000100100010000101000000000000010100001000100)
bishopTable 45 = $(mirrorBitsY 0b0000000100000010000001001000100001010000000000000101000010001000)
bishopTable 46 = $(mirrorBitsY 0b0000001000000100000010000001000010100000000000001010000000010000)
bishopTable 47 = $(mirrorBitsY 0b0000010000001000000100000010000001000000000000000100000000100000)
bishopTable 48 = $(mirrorBitsY 0b0100000000100000000100000000100000000100000000100000000000000010)
bishopTable 49 = $(mirrorBitsY 0b1000000001000000001000000001000000001000000001010000000000000101)
bishopTable 50 = $(mirrorBitsY 0b0000000010000000010000000010000000010001000010100000000000001010)
bishopTable 51 = $(mirrorBitsY 0b0000000000000000100000000100000100100010000101000000000000010100)
bishopTable 52 = $(mirrorBitsY 0b0000000000000000000000011000001001000100001010000000000000101000)
bishopTable 53 = $(mirrorBitsY 0b0000000000000001000000100000010010001000010100000000000001010000)
bishopTable 54 = $(mirrorBitsY 0b0000000100000010000001000000100000010000101000000000000010100000)
bishopTable 55 = $(mirrorBitsY 0b0000001000000100000010000001000000100000010000000000000001000000)
bishopTable 56 = $(mirrorBitsY 0b1000000001000000001000000001000000001000000001000000001000000000)
bishopTable 57 = $(mirrorBitsY 0b0000000010000000010000000010000000010000000010000000010100000000)
bishopTable 58 = $(mirrorBitsY 0b0000000000000000100000000100000000100000000100010000101000000000)
bishopTable 59 = $(mirrorBitsY 0b0000000000000000000000001000000001000001001000100001010000000000)
bishopTable 60 = $(mirrorBitsY 0b0000000000000000000000000000000110000010010001000010100000000000)
bishopTable 61 = $(mirrorBitsY 0b0000000000000000000000010000001000000100100010000101000000000000)
bishopTable 62 = $(mirrorBitsY 0b0000000000000001000000100000010000001000000100001010000000000000)
bishopTable 63 = $(mirrorBitsY 0b0000000100000010000001000000100000010000001000000100000000000000)
bishopTable _ = error "bishopTable: invalid index"

rookTable :: Word64 -> Word64
rookTable 0 = 0b0000000100000001000000010000000100000001000000010000000111111110
rookTable 1 = 0b0000001000000010000000100000001000000010000000100000001011111101
rookTable 2 = 0b0000010000000100000001000000010000000100000001000000010011111011
rookTable 3 = 0b0000100000001000000010000000100000001000000010000000100011110111
rookTable 4 = 0b0001000000010000000100000001000000010000000100000001000011101111
rookTable 5 = 0b0010000000100000001000000010000000100000001000000010000011011111
rookTable 6 = 0b0100000001000000010000000100000001000000010000000100000010111111
rookTable 7 = 0b1000000010000000100000001000000010000000100000001000000001111111
rookTable 8 =  0b0000000100000001000000010000000100000001000000011111111000000001
rookTable 9 =  0b0000001000000010000000100000001000000010000000101111110100000010
rookTable 10 = 0b0000010000000100000001000000010000000100000001001111101100000100
rookTable 11 = 0b0000100000001000000010000000100000001000000010001111011100001000
rookTable 12 = 0b0001000000010000000100000001000000010000000100001110111100010000
rookTable 13 = 0b0010000000100000001000000010000000100000001000001101111100100000
rookTable 14 = 0b0100000001000000010000000100000001000000010000001011111101000000
rookTable 15 = 0b1000000010000000100000001000000010000000100000000111111110000000
rookTable 16 = 0b0000000100000001000000010000000100000001111111100000000100000001
rookTable 17 = 0b0000001000000010000000100000001000000010111111010000001000000010
rookTable 18 = 0b0000010000000100000001000000010000000100111110110000010000000100
rookTable 19 = 0b0000100000001000000010000000100000001000111101110000100000001000
rookTable 20 = 0b0001000000010000000100000001000000010000111011110001000000010000
rookTable 21 = 0b0010000000100000001000000010000000100000110111110010000000100000
rookTable 22 = 0b0100000001000000010000000100000001000000101111110100000001000000
rookTable 23 = 0b1000000010000000100000001000000010000000011111111000000010000000
rookTable 24 = 0b0000000100000001000000010000000111111110000000010000000100000001
rookTable 25 = 0b0000001000000010000000100000001011111101000000100000001000000010
rookTable 26 = 0b0000010000000100000001000000010011111011000001000000010000000100
rookTable 27 = 0b0000100000001000000010000000100011110111000010000000100000001000
rookTable 28 = 0b0001000000010000000100000001000011101111000100000001000000010000
rookTable 29 = 0b0010000000100000001000000010000011011111001000000010000000100000
rookTable 30 = 0b0100000001000000010000000100000010111111010000000100000001000000
rookTable 31 = 0b1000000010000000100000001000000001111111100000001000000010000000
rookTable 32 = 0b0000000100000001000000011111111000000001000000010000000100000001
rookTable 33 = 0b0000001000000010000000101111110100000010000000100000001000000010
rookTable 34 = 0b0000010000000100000001001111101100000100000001000000010000000100
rookTable 35 = 0b0000100000001000000010001111011100001000000010000000100000001000
rookTable 36 = 0b0001000000010000000100001110111100010000000100000001000000010000
rookTable 37 = 0b0010000000100000001000001101111100100000001000000010000000100000
rookTable 38 = 0b0100000001000000010000001011111101000000010000000100000001000000
rookTable 39 = 0b1000000010000000100000000111111110000000100000001000000010000000
rookTable 40 = 0b0000000100000001111111100000000100000001000000010000000100000001
rookTable 41 = 0b0000001000000010111111010000001000000010000000100000001000000010
rookTable 42 = 0b0000010000000100111110110000010000000100000001000000010000000100
rookTable 43 = 0b0000100000001000111101110000100000001000000010000000100000001000
rookTable 44 = 0b0001000000010000111011110001000000010000000100000001000000010000
rookTable 45 = 0b0010000000100000110111110010000000100000001000000010000000100000
rookTable 46 = 0b0100000001000000101111110100000001000000010000000100000001000000
rookTable 47 = 0b1000000010000000011111111000000010000000100000001000000010000000
rookTable 48 = 0b0000000111111110000000010000000100000001000000010000000100000001
rookTable 49 = 0b0000001011111101000000100000001000000010000000100000001000000010
rookTable 50 = 0b0000010011111011000001000000010000000100000001000000010000000100
rookTable 51 = 0b0000100011110111000010000000100000001000000010000000100000001000
rookTable 52 = 0b0001000011101111000100000001000000010000000100000001000000010000
rookTable 53 = 0b0010000011011111001000000010000000100000001000000010000000100000
rookTable 54 = 0b0100000010111111010000000100000001000000010000000100000001000000
rookTable 55 = 0b1000000001111111100000001000000010000000100000001000000010000000
rookTable 56 = 0b1111111000000001000000010000000100000001000000010000000100000001
rookTable 57 = 0b1111110100000010000000100000001000000010000000100000001000000010
rookTable 58 = 0b1111101100000100000001000000010000000100000001000000010000000100
rookTable 59 = 0b1111011100001000000010000000100000001000000010000000100000001000
rookTable 60 = 0b1110111100010000000100000001000000010000000100000001000000010000
rookTable 61 = 0b1101111100100000001000000010000000100000001000000010000000100000
rookTable 62 = 0b1011111101000000010000000100000001000000010000000100000001000000
rookTable 63 = 0b0111111110000000100000001000000010000000100000001000000010000000
rookTable _ = error "rookTable: invalid index"

kingTable :: Word64 -> Word64
kingTable = $(mkTable "kingTable" kingTableT)

knightTable :: Word64 -> Word64
knightTable = $(mkTable "knightTable" knightTableT)

whiteKnightPunishment :: Word64
whiteKnightPunishment = 0x00008181818181FF
blackKnightPunishment :: Word64
blackKnightPunishment = 0xFF81818181810000
whiteWBishopFianchettoSpot :: Word64
whiteWBishopFianchettoSpot = 0x0000000000000200
whiteWPawnsForFianchetto :: Word64
whiteWPawnsForFianchetto = 0x0000000000020500
whiteBBishopFianchettoSpot :: Word64
whiteBBishopFianchettoSpot = 0x0000000000004000
whiteBPawnsForFianchetto :: Word64
whiteBPawnsForFianchetto = 0x000000000040A000
blackWBishopFianchettoSpot :: Word64
blackWBishopFianchettoSpot = 0x0040000000000000
blackWPawnsForFianchetto :: Word64
blackWPawnsForFianchetto = 0x00A0400000000000
blackBBishopFianchettoSpot :: Word64
blackBBishopFianchettoSpot = 0x00002000000000000
blackBPawnsForFianchetto :: Word64
blackBPawnsForFianchetto = 0x0005020000000000
